<!DOCTYPE html>
<html lang="en" class="has-aside-left has-aside-mobile-transition has-navbar-fixed-top has-aside-expanded">

<head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Profile - Admin</title>

  <!-- Fonts -->
  <link rel="dns-prefetch" href="https://fonts.gstatic.com">
  <link href="https://fonts.googleapis.com/css?family=Nunito" rel="stylesheet" type="text/css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css">
</head>
<body>
  <div id="app">
    <%- include('partials/TopNav.ejs') %>
    <section class="hero is-hero-bar">
      <div class="hero-body">
        <div class="level">
          <div class="level-left">
            <div class="level-item">
              <h1 style="width: 100%;" class="title">
                (Admin)
                Welcome <strong style="cursor: pointer;" onclick="window.location.href ='/profile'"><span style="color: #00d1b2;"> <%- user.name%> <%- user.surname%></span> ðŸ˜Š </strong>!        
              </h1>
            </div>
          </div>
          <div class="level-right" style="display: none;">
            <div class="level-item"></div>
          </div>
        </div>
      </div>
    </section>
    <!-- Users -->
    <section class="section">
      <div class="container">
        <div class="box">
          <h1 class="title">Users</h1>
          <div class="table-wrapper has-mobile-cards">
            <table class="table is-fullwidth is-striped is-hoverable is-fullwidth">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>National ID</th>
                        <th>Name</th>
                        <th>Surname</th>
                        <th>Email</th>
                        <th>User Type</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    
                    <% for(var i=0; i< users.length; i++) {%>
                    <tr style="cursor: pointer;" onclick="viewRideRequest('<%= users[i].id %>')"  >
                        <td data-label="Id"><%= users[i].id %></td>
                        <td data-label="national Id"><%= users[i].drivercode %></td>
                        <td data-label="carPlate"><%= users[i].name %></td>

                        <td data-label="Requester"><%= users[i].surname %></td>
                        <td data-label="Requester"><a href="mailto:<%= users[i].email %>"><%= users[i].email %></a></td>
                        <td data-label="Condition">
                            <small class="has-text-grey is-abbr-like"
                                title="Oct 25, 2020"><%= users[i].usertype %></small>
                        </td>
                        <td class="is-actions-cell">
                            <div class="buttons is-right">
                                <button class="button is-small is-danger"
                                    onclick="deleteCarConfirmation('<%= users[i].id %>')" type="button">
                                    <span class="icon"><i
                                            class="mdi mdi-trash-can"></i></span>
                                </button>
                            </div>
                        </td>
                    </tr>
                    <!-- Car Details Modal -->
                    <script>
                        function viewRideRequest(ride_id) {
                          Swal.fire({
                                title: `User - ${ride_id}`,
                                html : `
                                <a class="button is-primary" href="tel:<%= users[i].phone %>"><i class="mdi mdi-phone"></i></a>
                                <a class="button is-primary" href="mailto:<%= users[i].email %>"><i class="mdi mdi-email"></i></a>
                                        `,
                                icon: 'warning',
                                showCancelButton: true,
                                confirmButtonColor: '#3085d6',
                                cancelButtonColor: '#d33',
                                confirmButtonText: 'Accept'
                            }).then((result) => {
                                if (result.isConfirmed) {

                                  Swal.mixin({
                                      input: 'password',
                                      confirmButtonText: 'Next â†’',
                                      showCancelButton: true,
                                      progressSteps: ['1', '2'],
                                    }).queue([
                                      {
                                        title: 'Email',
                                        text: 'Enter your email:'
                                      },
                                      {
                                        title: 'Password',
                                        text: 'Enter your password:'
                                      }
                                    
                                    ]).then((result) => {
                                      if (!result.dismiss) {
                                        const answers = result.value;

                                        if(answers[0] == '<%= user.email %>' && answers[1] == '<%= user.password %>') {
                                          Swal.fire(
                                              'Accepted!',
                                              'Request Accepted!âœ…',
                                              'success'
                                          )
                                          window.location.href = `/api/ride-request/accept/${ride_id}`
                                        }else {
                                          Swal.fire(
                                              'Auth Failure!',
                                              'Wrong Email and Password!ðŸ˜³',
                                              'error'
                                          )
                                        }
                                      }
                                    });
                                }
                            })
                        }
                        function deleteCarConfirmation(ride_id){
                            Swal.fire({
                                title: `Are you sure, You Want to delete ride ${ride_id}?`,
                                text: "You won't be able to revert these changes!",
                                icon: 'warning',
                                showCancelButton: true,
                                confirmButtonColor: '#3085d6',
                                cancelButtonColor: '#d33',
                                confirmButtonText: 'Yes, delete it!'
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    Swal.fire(
                                        'Deleted!',
                                        'Your Car has been deleted.',
                                        'success'
                                    )
                                }
                            })
                        }
                    </script>
                    <% } %>

                </tbody>
            </table>
        </div>
        </div>
      </div>
      </div>
    </section>
    <!-- END Users -->
    <!-- CARS -->
    <section class="section">
      <div class="container">
        <div class="box">
          <h1 class="title">Cars</h1>
          <div class="table-wrapper has-mobile-cards">
            <table class="table is-fullwidth is-striped is-hoverable is-fullwidth">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Name</th>
                        <th>Condition</th>
                        <th>Status</th>
                        <th>Driver</th>
                        <th>Status</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    
                    <% for(var i=0; i<cars.length; i++) {%>
                    <tr style="cursor: pointer;" onclick="viewRideRequest('<%= cars[i].id %>')"  >
                        <td data-label="Id"><%= cars[i].id %></td>
                        <td data-label="pickupLocation"><%= cars[i].name %></td>
                        <td data-label="pickupLocation"><%= cars[i].condition %></td>
                        <td data-label="carPlate"><%= cars[i].status %></td>
                        <td data-label="Requester"><%= cars[i].drivercode %></td>
                        <td data-label="Condition">
                            <small class="has-text-grey is-abbr-like"
                                title="Oct 25, 2020"><%= cars[i].status %></small>
                        </td>
                        <td class="is-actions-cell">
                            <div class="buttons is-right">
                                <button class="button is-small is-danger"
                                    onclick="deleteCarConfirmation('<%= cars[i].id %>')" type="button">
                                    <span class="icon"><i
                                            class="mdi mdi-trash-can"></i></span>
                                </button>
                            </div>
                        </td>
                    </tr>
                    <!-- Car Details Modal -->
                    <script>
                        const viewRideRequest = (ride_id) => {
                          Swal.fire({
                                title: `Ride Request - ${ride_id} by <%= cars[i].name %> `,
                                html : ``,
                                icon: 'warning',
                                showCancelButton: true,
                                confirmButtonColor: '#3085d6',
                                cancelButtonColor: '#d33',
                                confirmButtonText: 'Accept'
                            }).then((result) => {
                                if (result.isConfirmed) {

                                  Swal.mixin({
                                      input: 'password',
                                      confirmButtonText: 'Next â†’',
                                      showCancelButton: true,
                                      progressSteps: ['1', '2'],
                                    }).queue([
                                      {
                                        title: 'Email',
                                        text: 'Enter your email:'
                                      },
                                      {
                                        title: 'Password',
                                        text: 'Enter your password:'
                                      }
                                    
                                    ]).then((result) => {
                                      if (!result.dismiss) {
                                        const answers = result.value;

                                        if(answers[0] == '<%= user.email %>' && answers[1] == '<%= user.password %>') {
                                          Swal.fire(
                                              'Accepted!',
                                              'Request Accepted!âœ…',
                                              'success'
                                          )
                                          window.location.href = `/api/ride-request/accept/${ride_id}`
                                        }else {
                                          Swal.fire(
                                              'Auth Failure!',
                                              'Wrong Email and Password!ðŸ˜³',
                                              'error'
                                          )
                                        }
                                      }
                                    });
                                }
                            })
                        }
                        const deleteCarConfirmation = (ride_id) => {
                            Swal.fire({
                                title: `Are you sure, You Want to delete ride ${ride_id}?`,
                                text: "You won't be able to revert these changes!",
                                icon: 'warning',
                                showCancelButton: true,
                                confirmButtonColor: '#3085d6',
                                cancelButtonColor: '#d33',
                                confirmButtonText: 'Yes, delete it!'
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    Swal.fire(
                                        'Deleted!',
                                        'Your Car has been deleted.',
                                        'success'
                                    )
                                }
                            })
                        }
                    </script>
                    <% } %>

                </tbody>
            </table>
        </div>
        </div>
      </div>
      </div>
    </section>
    <!-- END CARS -->
    <script>


    </script>

<script>


  const noridefrom6to18DOM = document.getElementById('noridefrom6to18')

  const currentTime = new Date().getHours();
  console.log(currentTime)

  function calculateTimeDifference(inputDate) {
      // Convert the input date to a JavaScript Date object
      const enteredDate = new Date(inputDate);

      // Get the current date and time
      const currentDate = new Date();

      // Calculate the time difference in milliseconds
      const timeDifferenceMs = currentDate - enteredDate;

      // Calculate hours, minutes, and seconds
      const hoursDifference = Math.floor(timeDifferenceMs / (1000 * 60 * 60));
      const minutesDifference = Math.floor((timeDifferenceMs % (1000 * 60 * 60)) / (1000 * 60));
      const secondsDifference = Math.floor((timeDifferenceMs % (1000 * 60)) / 1000);

      return {
        hours: hoursDifference,
        minutes: minutesDifference,
        seconds: secondsDifference
      };
    }
  
    const restrictridereqDOM = document.getElementById("restrictridereq")
    const requestformDOM = document.getElementById("requestform")
    const timeLeft = document.getElementById("timeleft")

    function MaxRequestReached(){
      if(parseInt(`<%= numberOfRideRequestToday %>`) > 4){
        restrictridereqDOM.style.display = 'block';
        restrictridereqDOM.innerHTML = 
          `<div class="container">
            <div class="box">
              <h1 class="title" style="color:red">You have reached your MAX (${numberOfRequests}) Requests for the day</h1>
            </div>
          </div>`
        requestformDOM.style.display = 'none'
      }
    }

    
    function closeCountDownAndRequestForm(){
      // if(currentTime > 18 || currentTime < 6){
      if(false){
        noridefrom6to18DOM.style.display = 'block';
        restrictridereqDOM.style.display = 'none';
        requestformDOM.style.display = 'none';
      }
    }

    function CountDownDalculateTimeDifference(startTime, finishTime) {
      const time1Parts = startTime.split(':').map(part => parseInt(part, 10));
      const time2Parts = finishTime.split(':').map(part => parseInt(part, 10));
      const time1Seconds = time1Parts[0] * 3600 + time1Parts[1] * 60 + time1Parts[2];
      const time2Seconds = time2Parts[0] * 3600 + time2Parts[1] * 60 + time2Parts[2];
      const timeDifferenceSeconds = Math.abs(time2Seconds - time1Seconds);
      console.log(timeDifferenceSeconds)
      const hours = Math.floor(timeDifferenceSeconds / 3600);
      const minutes = Math.floor((timeDifferenceSeconds % 3600) / 60);
      const seconds = timeDifferenceSeconds % 60;
      const timeDifference = `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;

      let dur = 3600 * time2Parts[0]
      let percentage =  timeDifferenceSeconds / dur * 100

      console.log(percentage.toFixed(2))
      return {
        timeDifference,
        percentage
      };
    }
</script>

    <footer class="footer">
      <div class="container-fluid">
        <div class="level">
          <div class="level-left">
            <div class="level-item">
              Â© 2023 Infinite Techs
            </div>
          </div>
          <div class="level-right">
            <div class="level-item">
              <div class="logo">
                <a href="/"><img src="images/logo.png" width="60px" alt="JustBoil.me"></a>
              </div>
            </div>
          </div>
        </div>
      </div>
    </footer>
    <script src="//cdn.jsdelivr.net/npm/sweetalert2@10"></script>
  <!-- Scripts below are for demo only -->
  <script type="text/javascript" src="javascripts/main.min.js"></script>
  <!-- <script src="
  https://cdn.jsdelivr.net/npm/sweetalert2@11.7.18/dist/sweetalert2.all.min.js
  "></script>
  <link href="
  https://cdn.jsdelivr.net/npm/sweetalert2@11.7.18/dist/sweetalert2.min.css
  " rel="stylesheet"> -->
  <!-- Icons below are for demo only. Feel free to use any icon pack. Docs: https://bulma.io/documentation/elements/icon/ -->
  <link rel="stylesheet" href="https://cdn.materialdesignicons.com/4.9.95/css/materialdesignicons.min.css">
</body>

</html>